<?php

// вопрос 1

$a = 'Тут текст новости, которую нужно разделить на части и еще много текста нужно разделить на части и еще много текста текст новости, которую нужно разделить на части и еще много текста текст новости, которую нужно разделить на части и еще много текста которую нужно разделить на части и еще много текста текст новости, которую нужно разделить на части и еще много текста текст новости, которую нужно разделить на части и еще много текста нужно разделить на части и еще много текста текст новости, которую нужно разделить на части и еще много текста.';

$link = 'https://news.loc/a.html';

$b = explode(" ", substr($a, 0, 180));
// неизвестно, является ли последнее слово обрезанным или целым, поэтому удаляем последний элемент массива
array_pop($b);
// дописываем ссылку для двух элеметов массива и ставим многоточие
$b[count($b) - 2] = '<a href="'. $link .'">' . $b[count($b) - 2];
$b[count($b) - 1] = $b[count($b) - 1] . ' ...</a>';
$b = implode(" ", $b);
echo $b;

// вопрос 2

$filename = 'fishingvessels.png'; // исходный файл
$new_file = 'new.png'; // новый файл
// функция для сжатия файлов png и jpeg
function compressImage($source, $destination, $quality)
{
    $info = getimagesize($source);
    if ($info['mime'] == 'image/jpeg') $image = imagecreatefromjpeg($source);
    elseif ($info['mime'] == 'image/png') $image = imagecreatefrompng($source);
    imagejpeg($image, $destination, $quality);
    return $destination;
}

compressImage($filename, $new_file, 7);

$size = getimagesize($new_file);
$size[0] = 200;
$size[1] = 100;

// выводим картинку
echo '<img style="object-fit: contain;" src="'.$new_file.'" width="'.$size[0].'" height="'.$size[1].'" >';


// вопрос 3

/*
1. SELECT * FROM a, b WHERE a.id=b.a_id;
2. SELECT * FROM a JOIN b ON a.id=b.a_id;

первый запрос делает выборку всех полей из таблицы а и b, в которых поле id таблицы а совпадает с полем a_id таблицы b;

второй запрос выбирает данные из таблицы a и объединяет их с таблицей b по условию, что поле id таблицы а совпадает с полем a_id таблицы b;

Использование оператора JOIN более читабельно и понятно для человека, и является более предпочтительным
*/

// вопрос 4

// Функция для возврата количества последовательных

function countArr($ar, $n)
{
    $count = 0;
    for ($i = 0; $i < $n - 1; $i++)
    {
        // Если последовательные элементы одинаковы
        if ($ar[$i] == $ar[$i + 1])
            $count++;
    }
    return $count;
}

$ar = [1, 2, 2, 3, 4, 4, 3, 7, 15, 10];
$n = sizeof($ar);
echo 'Количество одинаковых пар: ' . countArr($ar, $n);


